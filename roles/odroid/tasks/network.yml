---
- name: Check if RTL88XXAU module is loaded
  ansible.builtin.shell: "lsmod | grep -qw 88XXau"
  register: rtl88XXau_module_check
  changed_when: false
  failed_when: false
  become: true
  tags: [drivers, wifi]

- name: Install RTL8812AU Driver
  block:
    - name: Clone RTL8812AU driver repository at specific commit
      git:
        repo: "https://github.com/aircrack-ng/rtl8812au.git"
        dest: "/tmp/rtl8812au"
        version: "63cf0b4" # specify the commit hash here
        force: yes

    - name: Build and install RTL88XXAU Wi-Fi driver
      ansible.builtin.command: "make dkms_install"
      args:
        chdir: "/tmp/rtl8812au"
      become: true

    - name: Load the Wi-Fi driver module
      modprobe:
        name: 88XXau
        state: present
        persistent: present
      become: true
  when: rtl88XXau_module_check.rc != 0
  tags: [drivers, wifi]

- name: Ensure Network Manager is installed.
  package:
    name: network-manager
    state: present
  become: true
  tags: [wifi]

- name: Start and enable NetworkManager service
  systemd:
    name: NetworkManager
    state: started
    enabled: true
  tags: [wifi]

- name: Check wlan0 status
  ansible.builtin.command: "ip link show wlan0"
  register: wlan0_status
  changed_when: false
  tags: [wifi]

- name: Ensure wlan0 is up
  ansible.builtin.command: "ip link set wlan0 up"
  when: "'state DOWN' in wlan0_status.stdout"
  become: true
  tags: [wifi]

- name: Ensure WiFi interface is managed by NetworkManager
  command: nmcli device set wlan0 managed yes
  become: true
  tags: [wifi]

- name: Create or update WiFi connection
  community.general.nmcli:
    type: wifi
    conn_name: my-wifi
    ifname: wlan0
    ssid: "{{ TRNetwork.wifi_name }}"
    wifi_sec:
      key-mgmt: wpa-psk
      psk: "{{ TRNetwork.wifi_password }}"
    state: present
    autoconnect: true
  become: true
  tags: [wifi]

- name: Ensure WiFi connection is active
  command: nmcli connection up my-wifi
  become: true
  ignore_errors: true
  tags: [wifi]

- name: Check WiFi connection status
  command: nmcli device status
  register: wifi_status
  changed_when: false
  tags: [wifi]

- name: Display WiFi status
  debug:
    var: wifi_status.stdout_lines
  tags: [wifi]